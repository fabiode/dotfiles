"set cursorline
set cursorline
set termguicolors
"set t_Co=256

"let g:yadr_disable_solarized_enhancements = 1

colorscheme PaperColor

set background=dark
let g:ale_set_highlights = 0

if exists(":Tabularize")
  nmap <Leader>a= :Tabularize /=<CR>
  vmap <Leader>a= :Tabularize /=<CR>
  nmap <Leader>a: :Tabularize /:\zs<CR>
  vmap <Leader>a: :Tabularize /:\zs<CR>
endif

set noswapfile
set autoread

set completefunc=syntaxcomplete#Complete

nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;
noremap : ;
noremap ; :

set guioptions-=m  "no menu
set guioptions-=T  "no toolbar
set guioptions-=l
set guioptions-=L
set guioptions-=r  "no scrollbar
set guioptions-=R

nnoremap <leader>n :NERDTreeToggle<CR>

let g:ctrlp_map = '<D-p>'

let g:tagbar_autofocus = 1
nmap <c-q> :MyCtrlPTag<cr>
imap <c-q> <esc>:MyCtrlPTag<cr>

nnoremap <c-e> :CtrlPBufTagAll<cr>
inoremap <c-e> <esc>:CtrlPBufTagAll<cr>

nnoremap <c-/> :TComment<cr>
vnoremap <c-/> :TComment<cr>gv

func! MyPrtMappings()
  let g:ctrlp_prompt_mappings = {
        \ 'AcceptSelection("e")': ['<c-p>']
        \ }
endfunc

func! MyCtrlPTag()
  let g:ctrlp_prompt_mappings = {
        \ 'AcceptSelection("e")': ['<c-p>']
      \ }
  CtrlPBufTag
endfunc

let g:ctrlp_buffer_func = { 'exit': 'MyPrtMappings' }
com! MyCtrlPTag call MyCtrlPTag()

let g:airline_powerline_fonts=1
let g:airline_theme="papercolor"


" weird mappings doesnt work so we remap again

" upper/lower word
nnoremap <leader>u mQviwU`Q
nnoremap <leader>l mQviwu`Q

" upper/lower first char of word
nnoremap <leader>U mQgewvU`Q
nnoremap <leader>L mQgewvu`Q

" leader r1, r2, r3 for alphabetically sort ruby methods in range in visual mode
vnoremap <leader>r1 :'<,'>g/\vdef\ /,/\v^\s*end$/ s/$\n/@@@
vnoremap <silent> <leader>r2 :'<,'>sort<cr>
vnoremap <silent> <leader>r3 :'<,'>s/@@@/\r/g<cr>

" cd to the directory containing the file in the buffer
nnoremap <silent> <leader>cd :lcd %:h<CR>

" Create the directory containing the file in the buffer
nnoremap <silent> <leader>md :!mkdir -p %:p:h<CR>

" Some helpers to edit mode
" http://vimcasts.org/e/14
nnoremap <leader>ew :e <C-R>=expand('%:h').'/'<cr>
nnoremap <leader>es :sp <C-R>=expand('%:h').'/'<cr>
nnoremap <leader>ev :vsp <C-R>=expand('%:h').'/'<cr>
nnoremap <leader>et :tabe <C-R>=expand('%:h').'/'<cr>

" Swap two words
nnoremap <silent> gw :s/\(\%#\w\+\)\(\_W\+\)\(\w\+\)/\3\2\1/<CR>`'

" Underline the current line with '='
nnoremap <silent> <leader>ul :t.<CR>Vr=

" set text wrapping toggles
nnoremap <silent> <leader>tw :set invwrap<CR>:set wrap?<CR>

" find merge conflict markers
nnoremap <silent> <leader>fc <ESC>/\v^[<=>]{7}( .*\|$)<CR>

" Map the arrow keys to be based on display lines, not physical lines
map <Down> gj
map <Up> gk

" Toggle hlsearch with <leader>hs
nnoremap <leader>hs :set hlsearch! hlsearch?<CR>

" Adjust viewports to the same size
noremap <Leader>= <C-w>=
